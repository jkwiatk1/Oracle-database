-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-01-19 01:35:45 CET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



CREATE USER bd2c022 IDENTIFIED BY ACCOUNT UNLOCK ;

CREATE USER bd2c022_app IDENTIFIED BY ACCOUNT UNLOCK ;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE oceny (
    nr_albumu        CHAR(7 CHAR) NOT NULL,
    kod_przedmiotu   VARCHAR2(7 CHAR) NOT NULL,
    data_zapisu      DATE NOT NULL,
    nr_tematu        NUMBER(3) NOT NULL,
    wartosc          NUMBER(2, 1),
    data_wystawienia DATE,
    uwagi            VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE oceny
    ADD CONSTRAINT ocn_chk_wrt CHECK ( wartosc IN ( 2, 3, 3.5, 4, 4.5,
                                                    5 ) );

ALTER TABLE oceny ADD CONSTRAINT ocn_chk_dat CHECK ( data_wystawienia >= data_zapisu );

COMMENT ON TABLE oceny IS
    'Tabela ocen danych studentów z danych tematów.';

COMMENT ON COLUMN oceny.wartosc IS
    'Ocena cz¹stkowa z danego tematu. ';

CREATE INDEX ocn_tem_fk_idx ON
    oceny (
        kod_przedmiotu
    ASC,
        nr_tematu
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON oceny TO bd2c022_app;

ALTER TABLE oceny
    ADD CONSTRAINT ocn_pk PRIMARY KEY ( nr_albumu,
                                        kod_przedmiotu,
                                        data_zapisu,
                                        nr_tematu );

CREATE TABLE przedmioty (
    kod_przedmiotu VARCHAR2(7 CHAR) NOT NULL,
    nazwa          VARCHAR2(50 CHAR) NOT NULL,
    opis           VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE przedmioty
    ADD CONSTRAINT przedm_chk_kp CHECK ( kod_przedmiotu = upper(kod_przedmiotu) );

COMMENT ON TABLE przedmioty IS
    'Tabela zawieraj¹ca  informacje o  przedmiotach.';

COMMENT ON COLUMN przedmioty.kod_przedmiotu IS
    'Identyfikator przedmiotu.';

COMMENT ON COLUMN przedmioty.nazwa IS
    'Pe³na nazwa przedmiotu.';

GRANT DELETE, INSERT, SELECT, UPDATE ON przedmioty TO bd2c022_app;

ALTER TABLE przedmioty ADD CONSTRAINT przedm_pk PRIMARY KEY ( kod_przedmiotu );

ALTER TABLE przedmioty ADD CONSTRAINT przedm_uk UNIQUE ( nazwa );

CREATE TABLE studenci (
    nr_albumu      CHAR(7 CHAR) NOT NULL,
    nazwisko       VARCHAR2(25 CHAR) NOT NULL,
    imie           VARCHAR2(20 CHAR) NOT NULL,
    data_urodzenia DATE NOT NULL,
    imie_2         VARCHAR2(20 CHAR),
    pesel          CHAR(11 CHAR),
    uwagi          VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE studenci
    ADD CONSTRAINT stud_chk_nalb CHECK (REGEXP_LIKE(nr_albumu, '^[0-9]+$'));

ALTER TABLE studenci
    ADD CONSTRAINT stud_chk_naz CHECK ( nazwisko = upper(nazwisko) );

ALTER TABLE studenci
    ADD CONSTRAINT stud_chk_pes CHECK (REGEXP_LIKE(pesel, '^[0-9]+$'));

COMMENT ON TABLE studenci IS
    'Tabela  zawieraj¹ca wszystkich studentów.';

COMMENT ON COLUMN studenci.nr_albumu IS
    'Numeryczny identyfikator ka¿dego studenta.';

COMMENT ON COLUMN studenci.nazwisko IS
    'Nazwisko du¿ymi literami. ';

GRANT SELECT, INSERT, UPDATE, DELETE ON studenci TO bd2c022_app;

ALTER TABLE studenci ADD CONSTRAINT stud_pk PRIMARY KEY ( nr_albumu );

ALTER TABLE studenci ADD CONSTRAINT stud_pes_uk UNIQUE ( pesel );

ALTER TABLE studenci
    ADD CONSTRAINT stud_naz_im_dat_uk UNIQUE ( nazwisko,
                                               imie,
                                               imie_2,
                                               data_urodzenia );

CREATE TABLE tematy_ocen (
    nr_tematu      NUMBER(3) NOT NULL,
    kod_przedmiotu VARCHAR2(7 CHAR) NOT NULL,
    tytul          VARCHAR2(100) NOT NULL,
    waga_tematu    NUMBER(1) DEFAULT 1 NOT NULL,
    opis           VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE tematy_ocen
    ADD CONSTRAINT tem_chk_wt CHECK ( waga_tematu IN ( 0, 1, 2 ) );

COMMENT ON TABLE tematy_ocen IS
    'Tematy ocen cz¹stkowych z danymi  wagami dla ró¿nych przedmiotów.';

COMMENT ON COLUMN tematy_ocen.tytul IS
    'Pe³na treœæ tematu.';

COMMENT ON COLUMN tematy_ocen.waga_tematu IS
    'Wartoœæ liczbowa okreœlaj¹ca znaczenie  danego tematu na koñcow¹ ocenê z przedmiotu.. Mo¿liwe wartoœci: 0,1,2.';

GRANT DELETE, INSERT, SELECT, UPDATE ON tematy_ocen TO bd2c022_app;

ALTER TABLE tematy_ocen ADD CONSTRAINT tem_pk PRIMARY KEY ( kod_przedmiotu,
                                                            nr_tematu );

ALTER TABLE tematy_ocen ADD CONSTRAINT tem_uk UNIQUE ( tytul,
                                                       kod_przedmiotu );

CREATE TABLE zapisy_na_przedmioty (
    nr_albumu      CHAR(7 CHAR) NOT NULL,
    kod_przedmiotu VARCHAR2(7 CHAR) NOT NULL,
    data_zapisu    DATE NOT NULL,
    ocena_koncowa  NUMBER(2, 1)
)
LOGGING;

ALTER TABLE zapisy_na_przedmioty
    ADD CONSTRAINT znp_chk_ocn CHECK ( ocena_koncowa IN ( 2, 3, 3.5, 4, 4.5,
                                                          5 ) );

COMMENT ON TABLE zapisy_na_przedmioty IS
    'Tabela intersekcji  przechowuj¹ca informacjê jacy studenci  na jakie przedmioty s¹ zapisani.';

COMMENT ON COLUMN zapisy_na_przedmioty.data_zapisu IS
    'Data zapisu studenta na przedmiot';

COMMENT ON COLUMN zapisy_na_przedmioty.ocena_koncowa IS
    'Ocena koñcowa bêd¹ca œredni¹ wa¿on¹ ocen cz¹stkowych z danego przedmiotu. ';

CREATE INDEX znp_przedm_fk_idx ON
    zapisy_na_przedmioty (
        kod_przedmiotu
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON zapisy_na_przedmioty TO bd2c022_app;

ALTER TABLE zapisy_na_przedmioty
    ADD CONSTRAINT znp_pk PRIMARY KEY ( nr_albumu,
                                        kod_przedmiotu,
                                        data_zapisu );

ALTER TABLE oceny
    ADD CONSTRAINT ocn_tem_fk FOREIGN KEY ( kod_przedmiotu,
                                            nr_tematu )
        REFERENCES tematy_ocen ( kod_przedmiotu,
                                 nr_tematu )
    DEFERRABLE;

ALTER TABLE oceny
    ADD CONSTRAINT ocn_znp_fk FOREIGN KEY ( nr_albumu,
                                            kod_przedmiotu,
                                            data_zapisu )
        REFERENCES zapisy_na_przedmioty ( nr_albumu,
                                          kod_przedmiotu,
                                          data_zapisu )
    DEFERRABLE;

ALTER TABLE tematy_ocen
    ADD CONSTRAINT tem_przedm_fk FOREIGN KEY ( kod_przedmiotu )
        REFERENCES przedmioty ( kod_przedmiotu )
            ON DELETE CASCADE
    DEFERRABLE;

ALTER TABLE zapisy_na_przedmioty
    ADD CONSTRAINT znp_przedm_fk FOREIGN KEY ( kod_przedmiotu )
        REFERENCES przedmioty ( kod_przedmiotu )
    DEFERRABLE;

ALTER TABLE zapisy_na_przedmioty
    ADD CONSTRAINT znp_stud_fk FOREIGN KEY ( nr_albumu )
        REFERENCES studenci ( nr_albumu )
    DEFERRABLE;

CREATE OR REPLACE TRIGGER fkntm_tematy_ocen BEFORE
    UPDATE OF kod_przedmiotu ON tematy_ocen FOR EACH ROW
    WHEN (new.kod_przedmiotu <> old.kod_przedmiotu)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Tematy_ocen is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_zapisy_na_przedmioty BEFORE
    UPDATE OF kod_przedmiotu, nr_albumu ON zapisy_na_przedmioty FOR EACH ROW
    WHEN (new.kod_przedmiotu <> old.kod_przedmiotu or new.nr_albumu <> old.nr_albumu)
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Zapisy_na_przedmioty is violated');
END;
/

CREATE SEQUENCE tmocn_nr_tematu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tmocn_nr_tematu_trg BEFORE
    INSERT ON tematy_ocen
    FOR EACH ROW
    WHEN ( new.nr_tematu IS NULL )
BEGIN
    :new.nr_tematu := tmocn_nr_tematu_seq.nextval;
END;
/

CREATE OR REPLACE TRIGGER ocn_auto_fill_date
BEFORE INSERT ON oceny FOR EACH ROW
DECLARE
    v_data_zapisu DATE;
BEGIN
    SELECT MAX(data_zapisu) INTO v_data_zapisu
    FROM zapisy_na_przedmioty
    WHERE nr_albumu = :new.nr_albumu AND kod_przedmiotu = :new.kod_przedmiotu;

    IF v_data_zapisu IS NULL THEN
        RAISE_APPLICATION_ERROR(-20001, 'Nie znaleziono zapisu na przedmiot');
    ELSE
        :new.data_zapisu := v_data_zapisu;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE;
END;
/

SELECT table_name FROM user_tables;
COMMIT;
--SELECT sequence_name FROM user_sequences WHERE sequence_name = 'TMOCN_NR_TEMATU_SEQ';
-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                             2
-- ALTER TABLE                             22
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              2
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
